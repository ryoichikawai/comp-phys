Traceback (most recent call last):
  File "/home/kawai/anaconda3/envs/jbook/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/kawai/anaconda3/envs/jbook/lib/python3.10/site-packages/nbclient/client.py", line 1314, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/home/kawai/anaconda3/envs/jbook/lib/python3.10/site-packages/jupyter_core/utils/__init__.py", line 173, in wrapped
    return loop.run_until_complete(inner)
  File "/home/kawai/anaconda3/envs/jbook/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/home/kawai/anaconda3/envs/jbook/lib/python3.10/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/home/kawai/anaconda3/envs/jbook/lib/python3.10/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/kawai/anaconda3/envs/jbook/lib/python3.10/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import numpy as np

# Generate abscissas and weights
from sympy import symbols, poly, laguerre

# 10 points Gauss-Laguerre
NG = 10

x = symbols("x")
roots = poly(laguerre(NG, x)).all_roots()

# abscissas and weights are saved as numpy ndarray
x = np.array([r.evalf(20) for r in roots],dtype=float)
w = np.array([(r / ((NG + 1) * laguerre(NG + 1, r)) ** 2).evalf(20)\
              for r in roots],dtype=float)

nu32=3./2.
nu52=5./2.
N=20

# For 0 < z < 1
z_small=np.linspace(0,1,N+1)


from scipy.special import gamma 

f52_small_z=np.zeros(N+1)
f32_small_z=np.zeros(N+1)

# no need to compute for z=0.
f52_small_z[0]=0
f32_small_z[0]=0

for k in range(1,N+1):
    f52_small_z[k]=(w*x**(nu52-1)/(1+z_small[k]*np.exp(-x))).sum() \
        *z_small[k]/gamma(nu52)
    f32_small_z[k]=(w*x**(nu32-1)/(1+z_small[k]*np.exp(-x))).sum() \
        *z_small[k]/gamma(nu32)
    
f52_ps = z_small - z_small**2/2**nu52
f32_ps = z_small - z_small**2/2**nu32

# For 1000 > z > 100
z_large=np.linspace(100,1000,N+1)

f52_large_z=np.zeros(N+1)
f32_large_z=np.zeros(N+1)

for k in range(0,N+1):
    f52_large_z[k]=(w*x**(nu52-1)/(1+z_large[k]*np.exp(-x))).sum() \
        *z_large[k]/gamma(nu52)
    f32_large_z[k]=(w*x**(nu32-1)/(1+z_large[k]*np.exp(-x))).sum() \
        *z_large[k]/gamma(nu32)

xi = np.log(z_large)
f52_as = xi**nu52/gamma(nu52+1)*(1 + nu52*(nu52-1)*np.pi**2/6./xi**2 )
f32_as = xi**nu32/gamma(nu32+1)*(1 + nu32*(nu32-1)*np.pi**2/6./xi**2 )

# For 100>z>1

N=100
z_med=np.linspace(1,100,N+1)

f52_med_z=np.zeros(N+1)
f32_med_z=np.zeros(N+1)

for k in range(0,N+1):
    f52_med_z[k]=(w*x**(nu52-1)/(1+z_med[k]*np.exp(-x))).sum()\
        *z_med[k]/gamma(nu52)
    f32_med_z[k]=(w*x**(nu32-1)/(1+z_med[k]*np.exp(-x))).sum()\
        *z_med[k]/gamma(nu32)

import matplotlib.pyplot as plt
plt.ioff()
plt.figure(figsize=(10,3))

plt.subplot(1,2,1)
plt.semilogx(z_small,f32_small_z,"-b",label="Gauss-Laguerre")
plt.semilogx(z_small,f32_ps,"--r",label="power expansion")
plt.semilogx(z_large,f32_large_z,"-b")
plt.semilogx(z_large,f32_as,"--y",label="asymptotic expansion")
plt.semilogx(z_med,f32_med_z,"-b")
plt.legend(loc=0)
plt.ylabel(r"$f_{3/2}$")
plt.xlabel("z")

plt.subplot(1,2,2)
plt.semilogx(z_small,f52_small_z,"-b",label="Gauss-Laguerre")
plt.semilogx(z_small,f52_ps,"--r",label="power expansion")
plt.semilogx(z_large,f52_large_z,"-b")
plt.semilogx(z_large,f52_as,"--y",label="asymptotic expansion")
plt.semilogx(z_med,f52_med_z,"-b")
plt.legend(loc=0)
plt.ylabel(r"$f_{5/2}$")
plt.xlabel("z")

plt.show()

------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mModuleNotFoundError[0m                       Traceback (most recent call last)
Cell [0;32mIn[1], line 4[0m
[1;32m      1[0m [38;5;28;01mimport[39;00m [38;5;21;01mnumpy[39;00m [38;5;28;01mas[39;00m [38;5;21;01mnp[39;00m
[1;32m      3[0m [38;5;66;03m# Generate abscissas and weights[39;00m
[0;32m----> 4[0m [38;5;28;01mfrom[39;00m [38;5;21;01msympy[39;00m [38;5;28;01mimport[39;00m symbols, poly, laguerre
[1;32m      6[0m [38;5;66;03m# 10 points Gauss-Laguerre[39;00m
[1;32m      7[0m NG [38;5;241m=[39m [38;5;241m10[39m

[0;31mModuleNotFoundError[0m: No module named 'sympy'

